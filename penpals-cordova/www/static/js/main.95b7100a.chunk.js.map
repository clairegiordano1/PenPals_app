{"version":3,"sources":["store/user.js","components/Login.js","logo.png","Main.js","reportWebVitals.js","store/index.js","index.js"],"names":["GET_USER","REMOVE_USER","UPDATE_CURRENT_USER","ADD_USER","defaultUser","getUser","user","type","Login","handleChange","event","setState","target","name","value","handleLogin","a","state","email","length","password","props","auth1","me","console","log","this","getUserInfo","Card","centered","Form","onSubmit","Field","Input","placeholder","onChange","Checkbox","label","Button","fluid","basic","color","content","Icon","React","Component","connect","dispatch","axios","post","data","get","res","error","id","Main","Image","src","logo","size","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","renderReactDom","ReactDOM","render","document","getElementById","window","cordova","addEventListener"],"mappings":"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","file":"static/js/main.95b7100a.chunk.js","sourcesContent":["import axios from \"axios\";\n// import { serverLink } from \"./serverLink\";\n\n/**\n * ACTION TYPES\n */\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\nconst UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\nconst ADD_USER = \"ADD_USER\";\n\n/**\n * INITIAL STATE\n */\nconst defaultUser = {};\n\n/**\n * ACTION CREATORS\n */\nconst getUser = (user) => ({ type: GET_USER, user });\nconst removeUser = () => ({ type: REMOVE_USER });\nconst updateCurrentUser = (user) => ({ type: UPDATE_CURRENT_USER, user });\n\n/**\n * THUNK CREATORS\n */\n// export const putUser = (id, newInfo) => async (dispatch) => {\n//   try {\n//     const { data } = await axios.put(`/api/users/${id}`, newInfo);\n//     return dispatch(updateUserAdmin(id, data));\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const me = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"http://localhost:8081/auth/me\");\n    if (res.data) {\n      dispatch(getUser(res.data));\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const auth1 = (email, password) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\"http://localhost:8081/auth/login\", {\n      email,\n      password,\n    });\n    return dispatch(getUser(data));\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const auth2 = (\n  firstName,\n  lastName,\n  email,\n  password,\n  description,\n  imgUrl,\n  city,\n  state,\n  zipCode,\n  pushToken\n) => async (dispatch) => {\n  let res;\n  try {\n    res = await axios.post(\"/auth/signup\", {\n      firstName,\n      lastName,\n      email,\n      password,\n      description,\n      imgUrl,\n      city,\n      state,\n      zipCode,\n      pushToken,\n    });\n    return dispatch(getUser(res.data));\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getUserInfo = (id) => async (dispatch) => {\n  try {\n    const { data } = await axios.get(`http://localhost:8081/api/users/${id}`);\n    return dispatch(getUser(data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.post(\"/auth/logout\");\n    return dispatch(removeUser());\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const updateUser = (id, body) => async (dispatch) => {\n  try {\n    const { data } = await axios.put(`/api/users/${id}`, body);\n    return dispatch(updateCurrentUser(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n/**\n * REDUCER\n */\nexport default function userReducer(state = defaultUser, action) {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case REMOVE_USER:\n      return defaultUser;\n    case UPDATE_CURRENT_USER:\n      return action.user;\n    case ADD_USER:\n      return [...state, action.user];\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport {\n  Form,\n  Checkbox,\n  Input,\n  Card,\n  Button,\n  Select,\n  Icon,\n} from \"semantic-ui-react\";\nimport \"../style/Login.css\";\nimport { connect } from \"react-redux\";\nimport { auth1 } from \"../store/user\";\nimport { me } from \"../store/user\";\nimport { getUserInfo } from \"../store/user\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserInfo(1);\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleLogin = async () => {\n    try {\n      if (this.state.email.length && this.state.password.length) {\n        await this.props.auth1(this.state.email, this.state.password);\n        await this.props.me();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    return (\n      <Card centered>\n        <Form onSubmit={this.handleLogin}>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              placeholder=\"Email Address\"\n              type=\"text\"\n              value={this.state.email}\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <Input\n              placeholder=\"Password\"\n              type=\"password\"\n              value={this.state.password}\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label=\"My information looks correct\" />\n          </Form.Field>\n          <Button fluid basic color=\"blue\" content=\"Blue\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Button color=\"facebook\">\n          <Icon name=\"facebook\" /> Facebook\n        </Button>\n        {/* <Button color=\"twitter\">\n          <Icon name=\"twitter\" /> Twitter\n        </Button> */}\n        <Button color=\"green\">\n          <Icon name=\"google plus\" /> Google\n        </Button>\n        {/* <Button circular color=\"linkedin\">\n          <Icon name=\"linkedin\" /> LinkedIn\n        </Button> */}\n      </Card>\n    );\n  }\n}\n\nconst mapToState = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  auth1: (email, password) => dispatch(auth1(email, password)),\n  me: () => dispatch(me()),\n  getUserInfo: (id) => dispatch(getUserInfo(id)),\n});\n\nexport default connect(mapToState, mapDispatchToProps)(Login);\n","export default __webpack_public_path__ + \"static/media/logo.46014b6f.png\";","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport { Image } from \"semantic-ui-react\";\nimport logo from \"./logo.png\";\nexport default class Main extends Component {\n  render() {\n    return (\n      <div id=\"main\">\n        <Image src={logo} size=\"small\" centered />\n\n        <Route exact path=\"/\" component={Login} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport userReducer from \"./user\";\n// import authors from './authors'\n// import singleStory from './singleStory'\n// import singleAuthor from './singleAuthor'\n\nconst reducer = combineReducers({\n  user: userReducer,\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\n\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nconst renderReactDom = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Main />\n      </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\nif (window.cordova) {\n  document.addEventListener(\n    \"deviceready\",\n    () => {\n      renderReactDom();\n    },\n    false\n  );\n} else {\n  renderReactDom();\n}\n// serviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}